version: '3.8'

networks:
  roboshop:
    driver: bridge

services:
  mongodb:
    image: mongodb:v1
    container_name: mongodb
    networks:
      - roboshop

  catalogue:
    image: catalogue:v1
    container_name: catalogue
    networks:
      - roboshop
    depends_on:
      - mongodb

  redis:
    image: redis
    container_name: redis
    networks:
      - roboshop
    ports:
      - "6379:6379"  # optional, expose Redis port outside docker network

  user:
    image: user:v1
    container_name: user
    networks:
      - roboshop
    depends_on:
      - mongodb
      - redis

  cart:
    image: cart:v1
    container_name: cart
    networks:
      - roboshop
    depends_on:
      - redis
      - catalogue
    environment:
      - REDIS_HOST=redis
      - CATALOGUE_HOST=catalogue
      - CATALOGUE_PORT=8080

  # Uncomment and configure when needed:
  # mysql:
  #   image: joindevops/mysql:v1
  #   container_name: mysql
  #   networks:
  #     - roboshop
  #   volumes:
  #     - source: mysql
  #       target: /var/lib/mysql
  #       type: volume

  # shipping:
  #   image: joindevops/shipping:v1
  #   container_name: shipping
  #   networks:
  #     - roboshop
  #   depends_on:
  #     - cart
  #     - mysql

  # rabbitmq:
  #   image: rabbitmq
  #   container_name: rabbitmq
  #   networks:
  #     - roboshop
  #   volumes:
  #     - source: rabbitmq
  #       target: /var/lib/rabbitmq
  #       type: volume
  #   environment:
  #     - RABBITMQ_DEFAULT_USER=roboshop
  #     - RABBITMQ_DEFAULT_PASS=roboshop123

  # payment:
  #   image: joindevops/payment:v1
  #   container_name: payment
  #   networks:
  #     - roboshop
  #   depends_on:
  #     - cart
  #     - user
  #     - rabbitmq

  web:
    image: web:v1
    container_name: web
    networks:
      - roboshop
    ports:
      - "80:80"
    depends_on:
      - catalogue
      - user
      - cart
